name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - beta
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('package-lock.json') }}"

      - name: Check dependency cache
        uses: actions/cache@v2
        id: cache_dependencies
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: npm install
      - name: Check build cache
        uses: actions/cache@v2
        id: cache_built_packages
        with:
          path: ${{ github.workspace }}/dist
          key: ${{ github.sha }}
      - name: Build packages
        if: steps.cache_built_packages.outputs.cache-hit != 'true'
        run: npm run build
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      dependency_build_cache_key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ needs.job_build.outputs.dependency_cache_key }}

      - name: Check build cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/dist
          key: ${{ github.sha }}

      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: npm run semantic-release

      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
